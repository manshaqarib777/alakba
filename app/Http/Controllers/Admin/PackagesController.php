<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.1   |
    |              on 2021-04-04 16:33:40              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
* Copyright (C) Incevio Systems, Inc - All Rights Reserved
* Unauthorized copying of this file, via any medium is strictly prohibited
* Proprietary and confidential
* Written by Munna Khan <help.zcart@gmail.com>, September 2018
*/
 namespace App\Http\Controllers\Admin; use DB; use App\Package; use Carbon\Carbon; use Illuminate\Http\Request; use App\Services\PackageInstaller; use App\Http\Controllers\Controller; use App\Http\Requests\Validations\PackageInstallationRequest; class PackagesController extends Controller { public function index() { $installables = $this->scanPackages(); $installs = Package::all(); return view("\x61\x64\x6d\151\x6e\x2e\160\x61\143\153\x61\147\x65\163\x2e\x69\x6e\144\x65\x78", compact("\151\156\x73\164\141\x6c\154\141\142\154\x65\x73", "\x69\156\163\164\141\x6c\154\163")); } public function upload() { return view("\141\144\155\x69\156\56\160\x61\143\x6b\141\147\145\163\56\137\x75\160\x6c\x6f\141\144"); } public function save(Request $request) { echo "\74\160\162\145\76"; print_r($request->all()); echo "\x3c\x70\x72\x65\x3e"; exit("\x65\156\144\41"); } public function initiate(Request $request, $package) { if (!(config("\x61\x70\x70\x2e\144\x65\x6d\x6f") == true && config("\141\x70\x70\x2e\144\x65\x62\165\x67") !== true)) { goto AlURE; } return back()->with("\167\x61\162\x6e\151\156\x67", trans("\155\145\x73\x73\141\147\145\x73\x2e\x64\x65\x6d\x6f\x5f\162\x65\163\x74\162\x69\x63\x74\151\x6f\156")); AlURE: $installable = $this->scanPackages($package); if (!$installable) { goto JuPUi; } if (!Package::where("\x73\x6c\x75\x67", $installable["\x73\154\x75\147"])->first()) { goto XdscH; } return back()->with("\145\162\162\x6f\162", trans("\x6d\x65\x73\163\141\x67\x65\163\x2e\160\x61\143\153\141\x67\x65\x5f\x69\156\163\x74\x61\154\154\145\x64\x5f\x61\x6c\162\145\141\x64\171", ["\x70\141\x63\153\x61\x67\x65" => $package])); XdscH: JuPUi: return view("\141\x64\x6d\151\156\x2e\160\x61\x63\x6b\141\x67\145\163\56\x5f\x69\x6e\x69\164\151\141\x74\x65", compact("\x69\x6e\x73\164\x61\x6c\x6c\141\142\x6c\145")); } public function install(PackageInstallationRequest $request, $package) { if (!(config("\141\160\x70\56\144\145\155\157") == true && config("\141\x70\160\56\144\x65\x62\165\x67") !== true)) { goto yQCII; } return back()->with("\167\x61\162\156\151\x6e\147", trans("\155\x65\x73\163\141\147\x65\x73\x2e\144\x65\x6d\157\137\x72\x65\x73\x74\x72\151\x63\x74\x69\157\156")); yQCII: $installable = $this->scanPackages($package); if (!$installable) { goto xbuQZ; } DB::beginTransaction(); try { $installer = new PackageInstaller($request, $installable); if (!$installer->install()) { goto fDiGC; } DB::commit(); $msg = trans("\x6d\145\163\163\141\x67\x65\163\56\x70\x61\143\153\141\x67\x65\137\x69\156\163\x74\x61\x6c\154\x65\144\x5f\163\165\x63\143\145\163\x73", ["\x70\141\x63\153\141\147\x65" => $package]); return back()->with("\x73\165\x63\143\145\x73\163", $msg); fDiGC: } catch (\Exception $e) { DB::rollback(); \Log::error($e); return back()->with("\x65\162\162\157\x72", $e->getMessage()); } xbuQZ: return back()->with("\145\x72\x72\157\x72", trans("\x6d\x65\x73\x73\141\x67\145\163\56\146\141\x69\154\x65\x64")); } public function uninstall(Request $request, $package) { if (!(config("\x61\x70\160\x2e\x64\145\155\x6f") == true && config("\141\x70\160\56\x64\x65\x62\165\147") !== true)) { goto T4RU_; } return back()->with("\167\x61\162\x6e\151\156\147", trans("\x6d\145\163\163\x61\147\x65\163\x2e\144\145\155\157\x5f\162\x65\x73\164\x72\x69\x63\x74\151\x6f\x6e")); T4RU_: $registered = Package::where("\x73\154\x75\147", $package)->firstOrFail(); DB::beginTransaction(); try { $installer = new PackageInstaller($request, $registered->toArray()); if (!$installer->uninstall()) { goto NiQem; } DB::commit(); if (!$registered->delete()) { goto rlWFa; } $msg = trans("\155\145\163\x73\141\147\145\x73\x2e\160\x61\x63\153\x61\x67\x65\137\x75\156\151\x6e\163\x74\141\154\154\145\x64\137\x73\x75\143\143\145\x73\163", ["\160\141\x63\x6b\141\x67\145" => $package]); return back()->with("\x73\x75\143\x63\x65\x73\163", $msg); rlWFa: NiQem: } catch (\Exception $e) { DB::rollback(); \Log::error($e); return back()->with("\145\162\x72\x6f\162", $e->getMessage()); } return back()->with("\145\162\162\x6f\x72", trans("\x6d\x65\163\163\x61\147\x65\163\56\x66\141\151\154\x65\144")); } public function activation(Request $request, $package) { if (!(config("\x61\x70\x70\x2e\x64\145\155\x6f") == true && config("\141\160\x70\x2e\144\145\x62\x75\147") !== true)) { goto z5KqB; } return response("\x65\x72\x72\x6f\162", 444); z5KqB: if (!($registered = Package::where("\163\154\x75\x67", $package)->first())) { goto YYAbh; } $registered->active = !$registered->active; $registered->save(); return response("\x73\x75\x63\x63\x65\163\163", 200); YYAbh: $unregistered = $this->scanPackages($package); \Log::info($unregistered); if (!$unregistered) { goto pOgj2; } $registered = Package::create($unregistered); pOgj2: return response("\x73\165\143\143\x65\x73\163", 200); } public function updateConfig(Request $request) { if (!updateOptionTable($request)) { goto QFiUW; } return back()->with("\163\165\143\143\145\163\163", trans("\155\x65\163\163\141\147\x65\163\x2e\x70\141\143\x6b\141\147\145\137\x73\x65\164\x74\151\156\x67\163\x5f\x75\160\x64\x61\x74\145\144")); QFiUW: return back()->with("\x65\162\x72\157\162", trans("\x6d\x65\x73\163\141\147\145\163\56\146\x61\151\x6c\x65\x64")); } public function toggleConfig(Request $request, $option) { if (!(config("\x61\160\160\56\x64\x65\155\x6f") == true && config("\141\x70\160\56\x64\x65\x62\x75\x67") !== true)) { goto nNVrP; } return response("\x65\x72\x72\157\x72", 444); nNVrP: if (!\DB::table("\x6f\160\164\x69\x6f\x6e\163")->where("\x6f\160\164\x69\157\x6e\x5f\156\x61\155\145", $option)->update(["\x6f\x70\x74\151\x6f\x6e\137\166\141\x6c\x75\x65" => \DB::raw("\116\117\x54\x20\x6f\x70\x74\151\157\156\137\166\x61\x6c\165\145")])) { goto jndWs; } return response("\163\x75\x63\143\x65\x73\163", 200); jndWs: return response("\x65\x72\x72\x6f\162", 405); } private function scanPackages($slug = Null) { $packages = []; foreach (glob(base_path("\x70\141\x63\x6b\x61\x67\x65\163\x2f\52"), GLOB_ONLYDIR) as $dir) { if (!file_exists($manifest = $dir . "\57\155\x61\x6e\151\146\x65\163\x74\56\x6a\163\157\156")) { goto ltBpC; } $json = file_get_contents($manifest); if (!($json !== '')) { goto iNq7B; } $data = json_decode($json, true); if (!($data === null)) { goto xaQ3I; } throw new \Exception("\x49\x6e\x76\x61\x6c\151\x64\x20\155\141\156\151\x66\145\163\164\56\152\x73\157\156\40\x66\151\x6c\x65\x20\141\164\40\133{$dir}\135"); xaQ3I: if (!($slug && $data["\163\x6c\x75\x67"] == $slug)) { goto C_YOq; } return $data; C_YOq: $packages[] = $data; iNq7B: ltBpC: DZ87t: } TM_io: return $packages; } }